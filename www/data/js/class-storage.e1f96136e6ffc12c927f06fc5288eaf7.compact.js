var main=require("./fluid/fluid.main");require("./fluid/models/project");require("./fluid/views/project");require("./fluid/models/upload");var acc=require("./fluid/models/account");var dbStorage=require("./class-dbStorage");var fluidEvent=require("./class-event");var getParentWindow=require("./utils").getParentWindow;var reloader=require("./reloader");var locStorage={tempStorage:{},cachedUpdates:{},caching:false,lastUpdate:new Date().getTime(),get:function(b){if(storage.tempStorage[b]){return storage.tempStorage[b]}if(localStorage){var a=localStorage.getItem(b);if(a){storage.tempStorage[b]=JSON.parse(a);return storage.tempStorage[b]}}return null},tabSynchronisationCheckInterval:3000,lastTabSynchronisationCheck:null,set:function(i,f,a){if(!i||!f){return}var h=a==undefined?true:a;if(this.lastTabSynchronisationCheck+this.tabSynchronisationCheckInterval<new Date().getTime()){var c=localStorage.getItem("instanceId");if(c&&parseInt(c)!=g_instanceId){var g=localStorage.getItem("restoreMyInstanceId");if(g){storage._setItem("instanceId",g_instanceId);localStorage.removeItem("restoreMyInstanceId");return}storage._setItem("postloadMessage","tab");reloader.reload("savedInstanceId != g_instanceId");return}}if(typeof(f)=="string"){f=JSON.parse(f)}storage.lastUpdate=this.lastTabSynchronisationCheck=new Date().getTime();if((f)&&(h)){f.updated=storage.lastUpdate}var b=JSON.stringify(f);try{if(this.caching){this.cachedUpdates[i]=f}else{storage._setItem(i,b)}this.tempStorage[i]=f}catch(d){}fluidEvent.triggerEditor("storageChanged",{id:i,obj:f,timeUpdated:h})},remove:function(a){delete this.tempStorage[a];delete this.cachedUpdates[a];localStorage.removeItem(a)},cacheStart:function(){this.caching=true},commitCache:function(){if(!this.caching){return}this.caching=false;for(var a in this.cachedUpdates){this.set(a,this.cachedUpdates[a]);delete (this.cachedUpdates[a])}},setTempItem:function(b,a){this.tempStorage[b]=a},removeItem:function(a){localStorage.removeItem(a)},clear:function(){tempStorage={};cachedUpdates={};localStorage.clear()},_setItem:function(d,a){var c=false;while(!c){try{localStorage.setItem(d,a);c=true}catch(b){if(b&&(b.name=="QUOTA_EXCEEDED_ERR"||b.name=="NS_ERROR_DOM_QUOTA_REACHED"||b.code===22)){projTempObj.unloadOldest()}else{throw b}}}}};var topWndAccessible=true;try{window.top.fluid&&window.top.fluid.main}catch(e){topWndAccessible=false}var storage={get:function(h,c){var f=h&&h.substr?h.substr(1,1):"";var b,g,a;if(!h){return false}if(h[0]==="p"){if((!fluid.main.project||fluid.main.project.id!==h)&&fluid.main.projects){b=fluid.main.projects.get(h,c)}else{if(fluid.main.project&&fluid.main.project.id===h){b=fluid.main.project}else{if(topWndAccessible&&window.top.fluid&&window.top.fluid.main&&window.top.fluid.main.projects&&window.top.fluid.main.projects.get(h,c)){b=window.top.fluid.main.projects.get(h,c)}}}if(c&&c.returnModel){return b}else{return b?b.toJSON():false}}else{if(((fluid&&fluid.main&&fluid.main.project)||(window.top.fluid&&window.top.fluid.main&&window.top.fluid.main.project))&&((f==="_"&&(h[0]==="p"||h[0]==="x"||h[0]==="w"||h[0]==="l"))||((h[0]==="p"||h[0]==="x"||h[0]==="w"||h[0]==="l")&&h.length===33))){if(fluid&&fluid.main&&fluid.main.project){g=fluid.main.project.get(h,c)}else{if(window.top.fluid&&window.top.fluid.main&&window.top.fluid.main.project){g=window.top.fluid.main.project.get(h,c)}}if(g){return g}else{_.each(fluid.main.projects,function(k,i,l){var j=l.models[i].get(h,c);if(j){g=j}});return g}}else{if(fluid&&fluid.main&&fluid.main.account&&((f==="_"&&h[0]==="u")||(h[0]==="u"&&h.length===33))){g=fluid.main.account.toJSON();return g}else{if(fluid&&fluid.main&&fluid.main.uploads&&((f==="_"&&h[0]==="i")||(h[0]==="i")||h.length===33)){b=fluid.main.uploads.get(h);if(c&&c.returnModel){return b}else{return b?b.toJSON():false}}else{if(!(location.origin!=="file://"&&location.origin!=="null")&&window.g_preview&&getParentWindow()&&window.fluid.storage){var d=window.top.fluid.storage.get(h,c);return d}}}}}a=locStorage.get(h);if(h!=="accounts"&&h!=="bin"&&a){}if(a){return $.extend({},a)}else{return false}},set:function(h,g,b){g=_.clone(g);var f=h&&h.substr?h.substr(1,1):"";if(!h||!h.length){}if(f==="_"||((h.length===33)&&(h[0]==="p"||h[0]==="x"||h[0]==="w"||h[0]==="i"||h[0]==="u"))){if(h[0]==="p"&&fluid.main.project){if(fluid.main.project.id===h){fluid.main.project.set(g);return true}else{var d=fluid.main.projects.get(h);if(d){d.set(g);return true}else{return false}}}else{if(h[0]==="u"){if(fluid.main.account&&fluid.main.account.id===h){fluid.main.account.set(g);return true}else{return false}}else{if(h[0]==="i"){if(!g.id){g.id=h}var a=fluid.main.uploads.get(h);if(a){a.set(g)}else{fluid.main.uploads.add(g)}delete g.id;return true}else{if(h[0]==="b"){var c=fluid.main.account.customwidgets.get(h);if(c){c.set(g)}else{fluid.main.account.customwidgets.add(g)}}else{if(fluid.main.project){fluid.main.project.setChild(h,g);return true}}}}}}locStorage.set(h,g,b);return true},remove:function(b){var a=b.substr(0,2);if(a==="w_"){fluid.main.project.widgets.remove(b)}else{if(a==="x_"){fluid.main.project.pages.remove(b)}}return locStorage.remove(b)},cacheStart:function(){return locStorage.cacheStart()},commitCache:function(){return locStorage.commitCache()},setTempItem:function(b,a){return locStorage.setTempItem(b,a)},removeItem:function(a){return locStorage.removeItem(a)},clear:function(){return locStorage.clear()},_setItem:function(b,a){return locStorage._setItem(b,a)},init:function(a){Logger({key:"storageInitStart",group:"storageInit",message:"storage init started"});a=_.once(a);if(window.g_preview){a();return}fluid.main.projects=new fluid.Projects();fluid.main.uploads=new fluid.Uploads();dbStorage.onReady(function(){Logger({key:"storageDbsReady",group:"storageInit",message:"dbStorage is ready"});var b=storage.get("accounts");if(b&&b.last){dbStorage.get("accounts",b.last,function(c){if(c.fetched.length){Logger({key:"dbStorageAccFound",group:"storageInit",message:"dbStorage accounts found: "+c.fetched.length});fluid.main.account=new fluid.models.Account(c.resultsObj[c.fetched[0]].data);if(fluid.main.account.id){Logger({key:"storageAccModelCreateSuccess",group:"storageInit",message:"account model creation successful"})}dbStorage.get("uploadHeaders",fluid.main.account.id,function(g){if(g.fetched.length&&g.resultsArr[0]){var f=fluid.util._.toArray(g.resultsArr[0].data);fluid.main.uploads=new fluid.Uploads(f)}Logger({key:"storageUplHeadersFetched",group:"storageInit",message:"uploadHeaders fetched: "+g.fetched.length});var i=fluid.main.account.get("lastOpenProject");var h=false;var d=fluid.main.account.get("projectIds");if(d.length){dbStorage.get("projects",d,function(m){Logger({key:"storageProjFetched",group:"storageInit",message:"projects fetched: "+m.fetched.length});if(m.fetched.length===0){Logger({key:"storageNoProjFetched",group:"storageInit",message:"no projects fetched",error:true});a(null,true)}else{d=_.difference(d,m.failed);for(var l in m.resultsObj){if(m.resultsObj[l]){var j=m.resultsObj[l].id,o=m.resultsObj[l].data,n=m.resultsObj[l].data[m.resultsObj[l].id];if(!n.id){n.id=j}if(j===i){h=true;fluid.main.setMainProject(new fluid.models.project(o,{parse:true,projectId:i}));Logger({key:"storageLastProjModelPrepared",group:"storageInit",message:"last project model prepared: "+fluid.main.project.id});fluid.main.projects.add(fluid.main.project,{silent:true});if(fluid.main.project.get("removed")){fluid.main.project.set({removed:false})}d=_.without(d,m.resultsObj[l].id);if(o[i].unloaded){Logger({key:"storageLastProjIsUnloaded",group:"storageInit",message:"last project unloaded. loading..."});projTempObj.loadIfUnloaded(i,function(){Logger({key:"storageLastProjLoaded",group:"storageInit",message:"last project loaded"});if(d.length===0){a()}},{buildModel:true})}else{Logger({key:"storageFetchingUploadsForProjectLoadedFromDb",group:"storageInit",message:"fetching uploads for project loaded from db"});dbStorage.get("uploads",_.keys(o.uploads),function(r){Logger({key:"storageUploadsForProjectFetched",group:"storageInit",message:"uploads for project fetched: "+r.fetched.length});if(r.fetched.length){var p;for(var q=0;q<r.resultsArr.length;q++){p=false;if(r.resultsArr[q]&&r.resultsArr[q].id){p=storage.get(r.resultsArr[q].id,{returnModel:true})}if(p&&r.resultsArr[q]&&r.resultsArr[q].data){p.set({imgData:r.resultsArr[q].data},{})}}Logger({key:"storageUploadModelsUpdated",group:"storageInit",message:"uploadModels updated"})}if(d.length===0){a()}})}}else{if(n.unloaded){Logger({key:"storageAddingUnloadedProjsIntoProjsModel",group:"storageInit",message:"adding unloaded project into projects model"});fluid.main.projects.add(n,{silent:true});d=_.without(d,m.resultsObj[l].id);if(d.length===0){if(!fluid.main.project){Logger({key:"storageLastProjLoadedDespiteNotHavingFluidMainProject",group:"storageInit",message:"last project loaded despite not having fluid.main.project",error:true});a(null,true)}else{a()}}}else{var k=new fluid.models.project(o,{parse:true,projectId:j});Logger({key:"storageOverridingFluidMainProjectWithLoadedProjectsWhichIsntLastProjectId",group:"storageInit",message:"overriding fluid.main.project with loaded project which isnt lastProjectId",error:true});fluid.main.setMainProject(k);fluid.main.projects.add(k,{silent:true});d=_.without(d,m.resultsObj[l].id);if(d.length===0){a(null,true)}}}}}if(!h){a()}}})}else{localStorage.clear();localStorage.setItem("badinit",true);dbStorage.clear();setTimeout(function(){reloader.reload("badly initialized editor")},200)}})}else{a()}})}else{a()}})},tempStorage:locStorage.tempStorage};if(!fluid){fluid={}}fluid.storage=storage;module.exports=storage;